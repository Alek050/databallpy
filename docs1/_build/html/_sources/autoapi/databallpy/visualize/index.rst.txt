:py:mod:`databallpy.visualize`
==============================

.. py:module:: databallpy.visualize


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   databallpy.visualize.plot_soccer_pitch
   databallpy.visualize.save_match_clip



.. py:function:: plot_soccer_pitch(field_dimen: tuple = (106.0, 68.0), pitch_color: str = 'mediumseagreen', linewidth: int = 2, markersize: int = 20) -> Tuple[matplotlib.pyplot.figure, matplotlib.pyplot.axes]

   A function to plot a soccer pitch
   Note: relies heavily on https://github.com/Friends-of-Tracking-Data-FoTD/
   LaurieOnTracking/blob/master/Metrica_Viz.py

   :param field_dimen: x and y length of pitch in meters. Defaults to
   :type field_dimen: tuple, optional
   :param (106.0:
   :param 68.0).:
   :param pitch_color: Color of the pitch. Defaults to "mediumseagreen".
   :type pitch_color: str, optional
   :param linewidth: Width of the lines on the pitch. Defaults to 2.
   :type linewidth: int, optional
   :param markersize: Size of the dots on the pitch. Defaults to 20.
   :type markersize: int, optional

   :returns: figure and axes with the pitch depicted on it
   :rtype: Tuple[plt.figure, plt.axes]


.. py:function:: save_match_clip(match: databallpy.match.Match, start_idx: int, end_idx: int, save_folder: str, *, title: str = 'test_clip', team_colors: list = ['green', 'red'], pitch_color: str = 'mediumseagreen', events: list = [], variable_of_interest: pandas.Series = None)

   Function to save a subset of a match clip of the tracking data.

   Note that making animation is build with FFMPEG. You need to have FFMPEG installed
   on you device before being able to use this function.

   :param match: Match with tracking data and ohter info of the match.
   :type match: Match
   :param start_idx: Start index of what to save of the match.tracking_data df.
   :type start_idx: int
   :param end_idx: End index of what to save of the match.tracking_data df.
   :type end_idx: int
   :param save_folder: Location where to save the clip.
   :type save_folder: str
   :param title: Title of the clip. Defaults to "test_clip".
   :type title: str, optional
   :param team_colors: Colors of the home and away team. Defaults to
   :type team_colors: list, optional
   :param ["green":
   :param "red"].:
   :param pitch_color: Color of the pitch. Defaults to "mediumseagreen".
   :type pitch_color: str, optional
   :param events: What events should be plotted as well. Defaults to [].
   :type events: list, optional
   :param variable_of_interest: Variable you want to have plotted
   :type variable_of_interest: pd.Series, optional
   :param in the clip:
   :param this is a pd.Series that should have the same index:
   :param (start_idx: end_idx) as the tracking data that will be plotted. Defaults to None.


