:py:mod:`databallpy.match`
==========================

.. py:module:: databallpy.match


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   databallpy.match.Match



Functions
~~~~~~~~~

.. autoapisummary::

   databallpy.match.get_match



.. py:class:: Match

   This is the match class. It contains all information of the match and has
   some simple functions to easily obtain information about the match.

   :param tracking_data: Tracking data of the match.
   :type tracking_data: pd.DataFrame
   :param tracking_data_provider: Provider of the tracking data.
   :type tracking_data_provider: str
   :param event_data: Event data of the match.
   :type event_data: pd.DataFrame
   :param event_data_provider: Provider of the event data.
   :type event_data_provider: str
   :param pitch_dimensions: The size of the pitch in meters in x and y direction.
   :type pitch_dimensions: Tuple
   :param periods: The start and end idicators of all periods.
   :type periods: pd.DataFrame
   :param frame_rate: The frequency of the tracking data.
   :type frame_rate: int
   :param home_team_id: The id of the home team.
   :type home_team_id: int
   :param home_team_name: The name of the home team.
   :type home_team_name: str
   :param home_players: Information about the home players.
   :type home_players: pd.DataFrame
   :param home_score: Number of goals scored over the match by the home team.
   :type home_score: int
   :param home_formation: Indication of the formation of the home team.
   :type home_formation: str
   :param away_team_id: The id of the away team.
   :type away_team_id: int
   :param away_team_name: The name of the away team.
   :type away_team_name: str
   :param away_players: Information about the away players.
   :type away_players: pd.DataFrame
   :param away_score: Number of goals scored over the match by the away team.
   :type away_score: int
   :param away_formation: Indication of the formation of the away team.
   :type away_formation: str
   :param name: The home and away team name and score (e.g "nameH 3 - 1 nameA").
   :type name: str
   :param home_players_column_ids: All column ids of the tracking data that refer
                                   to information about the home team players.
   :type home_players_column_ids: list
   :param away_players_column_ids: All column ids of the tracking data that refer
                                   to information about the away team players.
   :type away_players_column_ids: list

   Funcs
       player_column_id_to_full_name: Simple function to get the full name of a player
                                      from the column id

   .. py:property:: name
      :type: str


   .. py:property:: home_players_column_ids
      :type: List[str]


   .. py:property:: away_players_column_ids
      :type: List[str]


   .. py:attribute:: tracking_data
      :type: pandas.DataFrame

      

   .. py:attribute:: tracking_data_provider
      :type: str

      

   .. py:attribute:: event_data
      :type: pandas.DataFrame

      

   .. py:attribute:: event_data_provider
      :type: str

      

   .. py:attribute:: pitch_dimensions
      :type: List[float]

      

   .. py:attribute:: periods
      :type: pandas.DataFrame

      

   .. py:attribute:: frame_rate
      :type: int

      

   .. py:attribute:: home_team_id
      :type: int

      

   .. py:attribute:: home_team_name
      :type: str

      

   .. py:attribute:: home_players
      :type: pandas.DataFrame

      

   .. py:attribute:: home_score
      :type: int

      

   .. py:attribute:: home_formation
      :type: str

      

   .. py:attribute:: away_team_id
      :type: int

      

   .. py:attribute:: away_team_name
      :type: str

      

   .. py:attribute:: away_players
      :type: pandas.DataFrame

      

   .. py:attribute:: away_score
      :type: int

      

   .. py:attribute:: away_formation
      :type: str

      

   .. py:method:: player_column_id_to_full_name(column_id: str) -> str

      Simple function to get the full name of a player from the column id

      :param column_id: the column id of a player, for instance "home_1"
      :type column_id: str

      :returns: full name of the player
      :rtype: str


   .. py:method:: __eq__(other)

      Return self==value.



.. py:function:: get_match(*, tracking_data_loc: str, tracking_metadata_loc: str, event_data_loc: str, event_metadata_loc: str, tracking_data_provider: str, event_data_provider: str)


